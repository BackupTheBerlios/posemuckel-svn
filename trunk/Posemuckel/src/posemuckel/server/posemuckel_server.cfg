# Dies ist die Konfigurationsdatei des
# Posemuckel Servers.

#### Mail-Konfiguration

# Das Kommando, welches benutzt wird, um eMails zu versenden.
# Hierbei können in der Kommandozeile die folgenden Makros
# angegeben werden:
# TOADDRESS - Die eMail Adresse des Empfängers.
# REPLYTOADDRESS - Die eMail Adresse des einladenden Benutzers.
# SUBJECT - Das Thema der Mail.
# Der eigentliche Nachrichtentext wird dem Programm über die Standard-
# eingabe übergeben. Dies funktioniert unter Linux doppelt plus gut:
#SENDMAIL_CMD=mail -s "SUBJECT" -a "Reply-To: REPLYTOADDRESS" TOADDRESS
#
# Wenn du unter Windows das Sendmail von 
# http://www.indigostar.com/sendmail.htm
# verwendest, dann ist die nachfolgende Konfiguration opti für dich:
SENDMAIL_CMD=C:\\Programme\\sendmail\\sendmail.exe -subject="SUBJECT"  TOADDRESS

# Ob die eMails gesendet werden sollen (yes oder no):
DO_SENDMAIL=no

#### Netzwerk-Konfiguration

# Konfiguration der Netzwerkschnittstelle
# Der Port, an dem gelauscht werden soll:
LISTEN_PORT=8081

# Die Adresse, an der gelauscht werden soll:
LISTEN_ADDRESS=localhost

#### DB-Konfiguration

# Hostname, wo MySQL läuft
DB_HOST=localhost

# Name der DB
DB_NAME=posemuckel

# Benutzername für den DB-Zugriff
DB_USER=root

# Passwort für den DB-Zugriff
DB_PASS=lifecycle

#### Log4j Logging Konfiguration:

# Diese Option hat das Format "Loglevel, Appender, Appender..."
# Loglevel kann folgende Werte haben:
# DEBUG # Alles ausgeben
# INFO # Infos, Warnungen etc. ausgeben
# WARN # usw...
# ERROR
# FATAL
# Dabei liegt eine Sortierung vor, die Wahl eines hohen
# Loglevel alle anderen, untergeordneteren Ausgaben einschließt.
# Logfile + stdout
#log4j.rootLogger=DEBUG, stdout, logfile
# nur Logfile 
#log4j.rootLogger=DEBUG, logfile
# nur stdout 
log4j.rootLogger=DEBUG, stdout 

# Appender stdout muss nun definiert werden:
log4j.appender.stdout=org.apache.log4j.ConsoleAppender

# stdout soll das Patternlayout benutzen
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# So, jetzt wird das Pattern festgelegt
log4j.appender.stdout.layout.ConversionPattern=%-4r [%t] %-5p (%F,%L) %x %m%n

# Jetzt das gleiche für das Logfile
# logfile soll in eine Datei schreiben
log4j.appender.logfile=org.apache.log4j.RollingFileAppender

# Pfad zur Log-Datei
log4j.appender.logfile.File=/home/jens/posemuckel.log

# Maximale Dateigröße
log4j.appender.logfile.MaxFileSize=200KB

# Anzahl der Backups, die gehalten werden sollen:
log4j.appender.logfile.MaxBackupIndex=1

# logfile soll das Patternlayout benutzen
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout

# So, jetzt wird das Pattern festgelegt
log4j.appender.logfile.layout.ConversionPattern=%-4r [%t] %-5p %c (%F,%L) %x -- %m%n

